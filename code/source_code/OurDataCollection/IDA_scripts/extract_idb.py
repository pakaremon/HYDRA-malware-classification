
import os
from os import path
import subprocess
from os.path import isfile
IDA_PATH32 = "idaq.exe"
IDA_PATH64 = "idaq64.exe"
out_put_dir = "C:\\Users\\nguye\\Desktop\\NT230\\malware\\IDB\\dataBaseIDB"

def export_idb_64(input_path, output_path):
    """Launch IDA Pro and export the IDB. Inner function."""
    try:
        print("Export IDB for {}".format(input_path))
        ida_output = str(subprocess.check_output([
            IDA_PATH64,
            # "-L{}".format(LOG_PATH),  # name of the log file. "Append mode"
            "-a-",  # enables auto analysis
            "-B",  # batch mode. IDA will generate .IDB and .ASM files
            "-o{}".format(output_path),
            input_path
        ]))

        if not isfile(output_path):
            print("[!] Error: file {} not found".format(output_path))
            print(ida_output)
            return False

        return True

    except Exception as e:
        print("[!] Exception in export_idb\n{}".format(e))


# Specify the directory
directory = 'C:\\Users\\nguye\\Desktop\\NT230\\malware\\2020.10.26.Drweb-ShadowPad_APT_backdoor_PlugX\\2020.10.26.Drweb-ShadowPad_APT_backdoor_PlugX'

# Get a list of all files and directories in the specified directory
all_files = os.listdir(directory)

# Filter out only the files (not directories)
files = [path.join(directory, f)for f in all_files if os.path.isfile(os.path.join(directory, f))]

# for file in files:
#     file_name = os.path.basename(file)
#     out_put_file = path.join(out_put_dir, file_name)
#     export_idb_64(file, out_put_file)

print(files[-1])
out_put_file = path.join(out_put_dir, files[-1])
export_idb_64(files[-1], out_put_file)

    